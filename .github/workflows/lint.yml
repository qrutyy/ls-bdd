name: Linters Check

on:
  pull_request:
    paths:
      - '**/*.c'
      - '**/*.h'
      - '**/*.py'
      - '**/*.sh'
      - '.github/workflows/lint.yml' 
  push:
    paths: 
      - '**/*.c'
      - '**/*.h'
      - '**/*.py'
      - '**/*.sh'
      - '.github/workflows/linters.yml' # Или имя этого файла
  workflow_dispatch: 

jobs:
  linters:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3 

    - name: Download checkpatch.pl
      run: |
        curl -L -o checkpatch.pl https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl
        chmod +x ./checkpatch.pl
        perl --version
        ./checkpatch.pl --version

    - name: Run checkpatch.pl on C/H files
      run: |
        OUTPUT_LOG="checkpatch_full_output.log"
        # Delete log from previous runs if any
        rm -f "$OUTPUT_LOG"

        echo "Running checkpatch.pl on all C and H files..."
        # The `sh -c '...'` wrapper around checkpatch.pl does two things:
        # 1. Appends both stdout and stderr of checkpatch.pl to $OUTPUT_LOG
        # 2. `|| true` ensures that sh -c always exits with 0,
        #    so xargs doesn't exit with 123 if checkpatch.pl found warnings.
        #    We pass $OUTPUT_LOG as an argument to sh -c, which can then be referenced as $0 within the sh -c script.
        find . \( -name '*.c' -o -name '*.h' \) -print0 | \
          xargs -0 -I {} sh -c './checkpatch.pl --no-tree --file "{}" >> "$0" 2>&1 || true' "$OUTPUT_LOG"

        echo "--- Full checkpatch.pl output ---"
        cat "$OUTPUT_LOG"
        echo "--- End of checkpatch.pl output ---"

        # Now, check the collected output for any lines indicating more than 0 errors.
        # grep -E will exit with 0 if a match is found, and 1 otherwise.
        if grep -E "total: [1-9][0-9]* errors" "$OUTPUT_LOG"; then
          echo "Checkpatch.pl found ERRORS. Failing the step."
          exit 1
        else
          echo "Checkpatch.pl found 0 errors (warnings may be present). Passing the step."
          exit 0
        fi

    - name: Set up Python and install Black
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install Black
      run: |
        python -m pip install --upgrade pip
        pip install black

    - name: Check Python code formatting with Black
      run: |
        black --check .

    - name: Install ShellCheck
      run: |
        sudo apt-get update 
        sudo apt-get install -y shellcheck

    - name: ShellCheck for shell scripts
      run: |
        find . -name '*.sh' -exec shellcheck {} +
